# This is a basic workflow to help you get started with Actions

name: Maven Release

# Controls when the action will run. 
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v1.4.3
      with:
        java-version: 11
        java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Cache the Maven packages to speed up build
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn -B package --file pom.xml
        
      - name: Release
        uses: qcastel/github-actions-maven-release@master
        with:
          release-branch-name: "main"

          git-release-bot-name: "dennis.fabri"
          git-release-bot-email: "info@dennisfabri.de"

          access-token: ${{ secrets.GITHUB_ACCESS_TOKEN }}

          # Release
          maven-repo-server-id: ${MAVEN_SERVER_ID}
          maven-repo-server-username: ${GITHUB_USERNAME}
          maven-repo-server-password: ${GITHUB_TOKEN}
          #maven-release-args: "-Dskip.unit.tests=true -Dskip.integration.tests=true"

          # Publish artifacts to GitHub Packages
          #maven-publish-args: "-Dskip.unit.tests=true -Dskip.integration.tests=true"
          maven-release-publish: "true"
          maven-snapshot-publish: "false"
          
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
